<?xml version="1.0" encoding="utf-8"?>

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009">

    <fx:Metadata>
        <![CDATA[
            /**
             * @copy spark.skins.spark.ApplicationSkin#hostComponent
             */
            [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            import com.github.ciacob.flex.ui.components.CustomHSlider;
            
            [Bindable]
            private var _trackBorderColor:uint = 0xcccccc;
            [Bindable]
            private var _trackColor:uint = 0x808080;
            [Bindable]
            private var _cornerRadius:uint = 10;
            
            override protected function updateDisplayList(w:Number, h:Number):void {
                super.updateDisplayList(w, h);
            
                const hc:Object = hostComponent;
                const parentSkin:Object = hc ? hc.parent : null;
                const slider:Object = parentSkin ? parentSkin.parent : null;
            
                if (slider && (slider is CustomHSlider)) {
            
                    // Retrieve & apply root `trackBorderColor` style
                    const bc:* = (slider as CustomHSlider).getStyle('trackBorderColor');
                    if (bc !== undefined) {
                        _trackBorderColor = uint(bc);
                    }
            
                    // Retrieve & apply root `trackColor` style
                    const tc:* = (slider as CustomHSlider).getStyle('trackColor');
                    if (tc !== undefined) {
                        _trackColor = uint(tc);
                    }
            
                    // Retrieve & apply root `cornerRadius` style. It cannot be higher than
                    // half the `fontSize`, to ensure rounded corners (if any) remain symmetrical.
                    const cr:* = (slider as CustomHSlider).getStyle('cornerRadius');
                    const fs:* = (slider as CustomHSlider).getStyle('fontSize');
                    if ((cr !== undefined) && (fs !== undefined)) {
                        _cornerRadius = Math.min(uint(cr), uint(fs / 2));
                    }
                }
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="up"/>
        <s:State name="down" stateGroups="above"/>
        <s:State name="over" stateGroups="above"/>
        <s:State name="disabled"/>
    </s:states>

    <s:BorderContainer borderColor="{_trackBorderColor}"
        backgroundColor="{_trackColor}"
        cornerRadius="{_cornerRadius}"
        top="0" left="0" right="0" bottom="0"
        minHeight="2"
        minWidth="20"
        alpha="0.8"
        alpha.above="1">
    </s:BorderContainer>

</s:SparkSkin>
