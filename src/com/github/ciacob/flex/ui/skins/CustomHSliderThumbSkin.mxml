<?xml version="1.0" encoding="utf-8"?>

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009">

    <fx:Metadata>
        <![CDATA[
            /**
             * @copy spark.skins.spark.ApplicationSkin#hostComponent
             */
            [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            import com.github.ciacob.flex.ui.components.CustomHSlider;

            [Bindable] private var _thumbBorderColor : uint = 0xcccccc;
            [Bindable] private var _thumbColor : uint = 0x808080;


            override protected function updateDisplayList(w:Number, h:Number):void {
                super.updateDisplayList(w, h);

                const hc : Object = hostComponent;
                const parentSkin : Object = hc? hc.parent : null;
                const slider : Object = parentSkin? parentSkin.parent : null;

                if (slider && (slider is CustomHSlider)) {

                    // Retrieve & apply root `thumbColor` style. Sets the
                    // border color too, unless overwritten.
                    const tc : * = (slider as CustomHSlider).getStyle('thumbColor');
                    if (tc !== undefined) {
                        _thumbColor = uint (tc);
                        _thumbBorderColor = _thumbColor;
                    }

                    // Retrieve & apply root `thumbBorderColor` style
                    const bc : * = (slider as CustomHSlider).getStyle ('thumbBorderColor');
                    if (bc !== undefined) {
                        _thumbBorderColor = uint (bc);
                    }

                }
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="up"/>
        <s:State name="over" stateGroups="above"/>
        <s:State name="down" stateGroups="above"/>
        <s:State name="disabled"/>
    </s:states>

    <s:BorderContainer id="thumb" 
        borderColor="{_thumbBorderColor}"
        backgroundColor="{_thumbColor}"
        cornerRadius="100"
        top="0" left="0" right="0" bottom="0"
        minHeight="4"
        minWidth="4"
        alpha="0.8" 
        alpha.above="1">
    </s:BorderContainer>

</s:SparkSkin>
